<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on My New Hugo Site</title><link>https://satouyuuki.github.io/post/</link><description>Recent content in Posts</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>Page(/post)</managingEditor><lastBuildDate>Tue, 17 May 2022 00:00:00 +0000</lastBuildDate><atom:link href="/post/" rel="self" type="application/rss+xml"/><item><title>気合いで読むthe art of readable code</title><link>https://satouyuuki.github.io/post/readable-code-thoughts/</link><pubDate>Tue, 17 May 2022 00:00:00 +0000</pubDate><guid>https://satouyuuki.github.io/post/readable-code-thoughts/</guid><description>なぜ本を読むのか プログラミングの命名について指摘されることが増えた
本のタイトル readable code PDFリンク
広い意味の動詞をなるべく使わない bad: GetPage() // どこから取得するのかわからない good: FetchPage(), DownloadPage() // インターネットから取ってくる
意味のない変数名を避けて意味のある変数名にしよう bad: retval(意味: return value) good: sum_square(意味: 平方根の合計)
ループで使う変数もわかりやすく命名しよう bad: i, j, k good: clubs-&amp;gt; ci, members-&amp;gt; mi, users-&amp;gt;ui
変数名はdirect, explicitな意味を使う bad: &amp;ndash;run_locally good: &amp;ndash;extra_logging
格言: 変数名は小さなコメントのようなものだ 変数に含められる情報ならコメントではなく変数名に含める bad: string id; // Example: &amp;ldquo;af84ef845cd8&amp;rdquo; good: hex_id
変数名に情報を含めるとバグを見つけやすい bad: var start = (new Date()).</description></item><item><title>title</title><link>https://satouyuuki.github.io/post/hoge/</link><pubDate>Tue, 05 Mar 2019 00:00:00 +0000</pubDate><guid>https://satouyuuki.github.io/post/hoge/</guid><description>hoge hoge</description></item><item><title>title</title><link>https://satouyuuki.github.io/post/%E3%82%A2%E3%82%B8%E3%83%A3%E3%82%A4%E3%83%AB%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/</link><pubDate>Tue, 05 Mar 2019 00:00:00 +0000</pubDate><guid>https://satouyuuki.github.io/post/%E3%82%A2%E3%82%B8%E3%83%A3%E3%82%A4%E3%83%AB%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6/</guid><description>アジャイルについてのまとめ 一番問題となっていることは何か すぐ取り掛かれることは何か なぜ本を読むのか 開発がプランニング通りにいかない。
本のタイトル 一番やさしいアジャイル開発の教本
本を読む目的は？ 開発がプランニング通りにいかない問題の解決 バグが多く発生してしまう問題への対策 少人数、若手だけのスクラムでアジャイル開発をよくしていくための方法
表紙・裏表紙・著者のプロフィール・前書き・後書き 株式会社エナジャイル 市谷トシヒロ 株式会社エナジャイル アライタケシ ナビタイム 小田中育生
前書き チームを成長させ、ソフトウェア開発のレベルを上げる方法論 エンジニア以外でも実践できるアジャイルについても書かれてる なぜアジャイルなのか？の問いの答え 後書き why how what setupの順番で説明されてる チーム、インクリメンタル、いてレーティぶが大事 誰がいつどんなことを書いたのか 目次を確認（何がどこに書かれてるのかの構造を把握する） アジャイル開発の世界-&amp;gt;アジャイルとはの前提知識の部分 なぜアジャイルなのか→whyの部分 アジャイル開発がもたらす変化-&amp;gt;???? アジャイル開発の中核にあるコンセプト-&amp;gt;チーム、インクリメンタル、いてレーティブの説明 小さく始めるアジャイル開発-&amp;gt;howの部分(どうやって導入していくのか) 上手に乗りこなすためのカイゼン手法-&amp;gt;数ある会社の制約をアジャイルではどう交わしていくのか アジャイル開発の理解を深める-&amp;gt;よくある問題に対する答え アジャイル開発はあなたから始める-&amp;gt;まとめ、実際に動き出せと激励をする</description></item></channel></rss>